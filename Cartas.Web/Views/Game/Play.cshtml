@using Cartas.Web.Domain
@model Cartas.Web.Models.PlayGameViewModel
@{
    Layout = null;
}
<html>


<head>
    <link rel="stylesheet" href="~/Content/game.css"/>
</head>
<body>

@Scripts.Render("~/bundles/jquery")
<script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
<script src="~/signalr/hubs"></script>
<script type="text/javascript" src="~/Scripts/pixi.min.js"></script>
<script type="text/javascript" src="~/Scripts/pixi-legacy.min.js"></script>
<script type="text/javascript" src="~/Scripts/pixi-particles.js"></script>
<script type="text/javascript" src="~/Scripts/pixi-sound.js"></script>
<script type="text/javascript" src="~/Scripts/gsap.min.js"></script>
@Scripts.Render("~/bundles/game")

<script type="text/javascript">
    var gameStarted = @Html.Raw(Model.Game.Started.ToString().ToLower());
    var isMasterUser = @Html.Raw((Model.Game.MasterPlayer.PlayerId == Model.ThisPlayer.PlayerId).ToString().ToLower());
    var isPlaying = @Html.Raw(Model.ThisPlayer.IsPlaying.ToString().ToLower());
    var playerCards = [];
    @foreach (var d in Model.ThisPlayer.Cards)
    {
        @:playerCards.push(new Card(@d.Num, @d.Suit));
    }
    var potentialWinnerPlayerId = null;
    var winnerPlayerId = null;
    @if (Model.Game.PotentialWinner != null)
    {
        var playerId = Model.Game.PotentialWinner.Player.PlayerId;

        if (Model.Game.PotentialWinner.HasWon)
        {
            @:winnerPlayerId = '@playerId';
        }
        else
        {
            @:potentialWinnerPlayerId = '@playerId';
        }
    }

    var gamePlayers = [];
    @foreach (var player in Model.Game.ActivePlayers.Union(Model.Game.WaitingPlayers))
    {
        @:gamePlayers.push(new Player('@player.PlayerId', '@Html.Raw(player.PlayerName)', '@player.Avatar', @player.Seat, @player.WinCount));
    }
    var lastPlayedCard = null;
    @if (Model.Game.LastPlayedCard != null)
    {
        @:lastPlayedCard = new Card(@Model.Game.LastPlayedCard.Num, @Model.Game.LastPlayedCard.Suit);
    }

    var avatars = [];
    @foreach (var avatar in Model.AvatarList)
    {
        @:avatars.push("@avatar");
    }

    var resourceLoader = new ResourceLoader(document, avatars);
    resourceLoader.init(() => init(resourceLoader.resources));

    function init(resources) {
        const game = new Game('@Model.Game.GameId', document, window, '@Model.ThisPlayer.PlayerId', isMasterUser, gamePlayers, gameStarted, @Model.Game.SeatTurn,
            resources, '@Html.Raw(Model.Game.Goal)', playerCards, lastPlayedCard, potentialWinnerPlayerId, winnerPlayerId, isPlaying);
        game.init();
    }
</script>
</body>

</html>